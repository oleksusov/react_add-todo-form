{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","classNames","href","TodoInfo","todo","title","completed","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","newTodos","setNewTodos","invalidInput","setInvalidInput","invalidSelect","setInvalidSelect","setTitle","selectedUser","setSelectedUser","handleChange","event","target","value","action","method","onSubmit","preventDefault","Math","max","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81d5d525.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import classNames from 'classnames';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a\n      className={classNames('UserInfo')}\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )\n      }\n    >\n      <h2 className={classNames('TodoInfo__title')}>\n        {title}\n      </h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [newTodos, setNewTodos] = useState(todos);\n  const [invalidInput, setInvalidInput] = useState(false);\n  const [invalidSelect, setInvalidSelect] = useState(false);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('0');\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement\n  | HTMLSelectElement>) => {\n    const {\n      name,\n      value,\n    } = event.target;\n\n    switch (name) {\n      case 'titleInput':\n        setTitle(value);\n        setInvalidInput(false);\n        break;\n\n      case 'userSelect':\n        setSelectedUser(value);\n        setInvalidSelect(false);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const submitChanges = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if ((title === '') && (selectedUser === '0')) {\n      setInvalidInput(true);\n      setInvalidSelect(true);\n\n      return;\n    }\n\n    if (title === '') {\n      setInvalidInput(true);\n\n      return;\n    }\n\n    if (selectedUser === '0') {\n      setInvalidSelect(true);\n\n      return;\n    }\n\n    setNewTodos([\n      ...newTodos,\n      {\n        id: (Math.max(...newTodos.map(todo => todo.id)) + 1),\n        title,\n        completed: false,\n        userId: +selectedUser,\n        user: getUser(+selectedUser),\n      },\n    ]);\n\n    setInvalidInput(false);\n    setInvalidSelect(false);\n    setTitle('');\n    setSelectedUser('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={submitChanges}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"titleInput\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleChange}\n          />\n          {invalidInput\n            && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            name=\"userSelect\"\n            value={selectedUser}\n            onChange={handleChange}\n          >\n            <option\n              value=\"0\"\n              key=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {invalidSelect\n            && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}